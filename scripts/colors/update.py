#! /usr/bin/python

from __future__ import print_function

from cdl_colormap import COLORMAP


PATTERNS_FILE = 'src/icp/apps/core/templates/patterns.html'
SASS_FILE = 'src/icp/sass/utils/_crop-colors.scss'

CROP_COLORS = {key: '#%02x%02x%02x' % rgb
               for key, rgb in COLORMAP.iteritems()}
CROP_COVER_KEYS = [53, 54, 55, 56, 57, 58, 59]

PATTERN_SIZE = 15
DARK_LINE_COLOR = '#000'
LIGHT_LINE_COLOR = '#FFF'

STROKE_WIDTH = 1
STORKE_LINECAP = 'square'
STROKE_LINEJOIN = 'bevel'
STROKE_OPACITY = 0.75

lineStyle = 'stroke-width:{};stroke-linecap:{};' \
            'stroke-linejoin:{};stroke-opacity:{}'\
            .format(STROKE_WIDTH, STORKE_LINECAP,
                    STROKE_LINEJOIN, STROKE_OPACITY)

patterns = []
styles = []
for key, color in CROP_COLORS.iteritems():
    lines = ''
    stroke = DARK_LINE_COLOR if sum(COLORMAP[key]) > 300 else LIGHT_LINE_COLOR
    if key in CROP_COVER_KEYS:
        lines = '''
            <line x1="0" y1="0" x2="{size}" y2="{size}"
                  style="stroke:{stroke};{style}" />
            <line x1="{size}" y1="0" x2="0" y2="{size}"
                  style="stroke:{stroke};{style}" />
        '''.format(size=PATTERN_SIZE, stroke=stroke, style=lineStyle)

    patterns.append('''
        <pattern id="fill-crop-{id}" patternUnits="userSpaceOnUse"
                 width="{size}" height="{size}">
            <rect width="{size}" height="{size}" style="fill:{color}" />
            {lines}
        </pattern>
    '''.format(id=key, size=PATTERN_SIZE, color=color, lines=lines))

    styles.append('{}: {}'.format(key, color))

with open(PATTERNS_FILE, 'w') as target:
    target.write('''<!-- Generated by scripts/colors/update.py -->
    <svg>
        <defs>
            {patterns}
        </defs>
    </svg>
    '''.format(patterns=''.join(patterns)))

with open(SASS_FILE, 'w') as target:
    target.write('''// Generated by scripts/colors/update.py
    $cropColors: (
        {colors}
    );
    '''.format(colors=',\n        '.join(styles)))
